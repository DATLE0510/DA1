<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        Qmu15AAAAABJRU5ErkJggg==
</value>
  </data>
  <metadata name="popupMenu1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="barManager1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>166, 17</value>
  </metadata>
</root>